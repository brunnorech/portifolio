name: Deploy Next.js to Plesk

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Instalar dependências
        run: npm install

      - name: Gerar build da aplicação
        run: npm run build
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}

      - name: Preparar estrutura de arquivos
        run: |
          cp -r .next/static .next/standalone/.next/
          cp -r public .next/standalone/

      - name: Deploy para o Plesk via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: sospix.com.br
          username: brech
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ".next/standalone/"
          server-dir: ./standalone/
          protocol: ftps
          timeout: 300000 # 300 segundos (5 minutos)
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**

  deploy-restart:
    runs-on: ubuntu-latest
    needs: deploy # Aguarda a finalização do job "deploy"
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Criar pasta tmp
        run: mkdir -p ./tmp

      - name: Criar restart.txt com timestamp
        run: echo "Restart at $(date)" > ./tmp/restart.txt

      - name: Deploy restart.txt para a pasta /tmp via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: sospix.com.br
          username: brech
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./tmp/"
          server-dir: "./standalone/tmp/"
          protocol: ftps
          include: "restart.txt"
